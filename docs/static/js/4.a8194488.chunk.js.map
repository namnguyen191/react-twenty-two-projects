{"version":3,"sources":["pages/Projects/QuoteGenerator/QuoteGenerator.tsx"],"names":["QuoteGenerator","useState","loading","quote","text","author","data","setData","useEffect","document","title","process","getRandomQuote","a","axios","get","apiRes","quotes","setTimeout","className","src","alt","length","onClick","tweetUrl","window","open"],"mappings":"6PA0FeA,UA1EkB,WAAO,IAAD,QACbC,mBAAkB,CACxCC,SAAS,EACTC,MAAO,CAAEC,KAAM,GAAIC,OAAQ,MAHQ,mBAC9BC,EAD8B,KACxBC,EADwB,KAMrCC,qBAAU,WACRC,SAASC,MATCC,gCAUVC,MAEC,IAEH,IAAMA,EAAc,uCAAG,8BAAAC,EAAA,4DACN,2DACfN,EAAQ,2BAAKD,GAAN,IAAYJ,SAAS,KAFP,SAGAY,IAAMC,IAFZ,4DADM,OAGfC,EAHe,OAKfb,EAAQa,EAAOV,KAAKW,OAAO,GACjCC,YAAW,WACTX,EAAQ,2BAAKD,GAAN,IAAYJ,SAAS,EAAOC,aAClC,KARkB,2CAAH,qDAgBpB,OACE,qBAAKgB,UAAU,4BAAf,SACGb,EAAKJ,QACJ,qBAAKiB,UAAU,oBAAf,SACE,qBACEC,IAAI,0CACJC,IAAI,UACJF,UAAU,cAId,sBAAKA,UAAU,kBAAf,UAEE,sBACEA,UACE,gBAAiB,UAAAb,EAAKH,aAAL,eAAYC,KAAKkB,QAAS,GAAK,OAAS,IAF7D,UAKE,mBAAGH,UAAU,sBACb,sBAAMA,UAAU,QAAhB,mBAAyBb,EAAKH,aAA9B,aAAyB,EAAYC,UAIvC,qBAAKe,UAAU,eAAf,SACE,sBAAMA,UAAU,SAAhB,mBAA0Bb,EAAKH,aAA/B,aAA0B,EAAYE,WAIxC,sBAAKc,UAAU,gBAAf,UACE,wBACEA,UAAU,cACVT,MAAM,cACNa,QArCU,WACpB,IAAMC,EAAQ,gDAA4ClB,EAAKH,MAAMC,KAAvD,YAA+DE,EAAKH,MAAMC,MACxFqB,OAAOC,KAAKF,EAAU,WAgCd,SAKE,mBAAGL,UAAU,qBAEf,wBAAQA,UAAU,gBAAgBI,QAAS,kBAAMX,KAAjD","file":"static/js/4.a8194488.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './QuoteGeneratorStyles.scss';\n\ntype Quote = {\n  text: string;\n  author: string;\n};\n\ntype APIData = {\n  loading: boolean;\n  quote: Quote;\n};\n\nconst TITLE = process.env.REACT_APP_APP_NAME + ' - Quote Generator';\n\nconst QuoteGenerator: React.FC = () => {\n  const [data, setData] = useState<APIData>({\n    loading: true,\n    quote: { text: '', author: '' },\n  });\n\n  useEffect(() => {\n    document.title = TITLE;\n    getRandomQuote();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getRandomQuote = async () => {\n    const apiUrl = 'https://goquotes-api.herokuapp.com/api/v1/random?count=1';\n    setData({ ...data, loading: true });\n    const apiRes = await axios.get<{ status: string; quotes: Quote[] }>(apiUrl);\n\n    const quote = apiRes.data.quotes[0];\n    setTimeout(() => {\n      setData({ ...data, loading: false, quote });\n    }, 500);\n  };\n\n  const postToTwitter = () => {\n    const tweetUrl = `https://twitter.com/intent/tweet?text=${data.quote.text}-${data.quote.text}`;\n    window.open(tweetUrl, '_blank');\n  };\n\n  return (\n    <div className=\"quote-generator-container\">\n      {data.loading ? (\n        <div className=\"loading-container\">\n          <img\n            src=\"/images/loading-simple-spinner-blue.svg\"\n            alt=\"Loading\"\n            className=\"loading\"\n          />\n        </div>\n      ) : (\n        <div className=\"quote-container\">\n          {/* Quote */}\n          <div\n            className={\n              'quote-text ' + (data.quote?.text.length > 70 ? 'long' : '')\n            }\n          >\n            <i className=\"fas fa-quote-left\" />\n            <span className=\"quote\">{data.quote?.text}</span>\n          </div>\n\n          {/* Author */}\n          <div className=\"quote-author\">\n            <span className=\"author\">{data.quote?.author}</span>\n          </div>\n\n          {/* Buttons */}\n          <div className=\"btn-container\">\n            <button\n              className=\"twitter-btn\"\n              title=\"Tweet This!\"\n              onClick={postToTwitter}\n            >\n              <i className=\"fab fa-twitter\" />\n            </button>\n            <button className=\"new-quote-btn\" onClick={() => getRandomQuote()}>\n              New Quote\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QuoteGenerator;\n"],"sourceRoot":""}
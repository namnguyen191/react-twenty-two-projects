{"version":3,"sources":["pages/Projects/JokeTeller/JokeTeller.tsx"],"names":["JokeTeller","btnRef","useRef","jokeRef","useEffect","document","title","process","tellAJoke","a","current","disabled","jokeString","axios","get","headers","Accept","jokeRes","data","console","log","innerText","synth","window","speechSynthesis","uterThis","SpeechSynthesisUtterance","addEventListener","speak","className","style","backgroundImage","ref","onClick"],"mappings":"6OA6DeA,UAtDc,WAC3B,IAAMC,EAASC,iBAA0B,MACnCC,EAAUD,iBAAuB,MAEvCE,qBAAU,WACRC,SAASC,MARCC,+BAWZ,IAAMC,EAAS,uCAAG,kCAAAC,EAAA,6DAChBR,EAAQS,QAASC,UAAW,EAExBC,EAAa,UAHD,kBAMQC,IAAMC,IAhBf,8BAgBuC,CAClDC,QAAS,CACPC,OAAQ,gBARE,OAMRC,EANQ,OAYdL,EAAaK,EAAQC,KAZP,gDAcdC,QAAQC,IAAR,MACAR,EAAa,wDAfC,QAkBhBT,EAASO,QAASW,UAAYT,EAC1BU,EAAQC,OAAOC,iBACfC,EAAW,IAAIC,yBAAyBd,IACnCe,iBAAiB,OAAO,WAC/B1B,EAAQS,QAASC,UAAW,KAE9BW,EAAMM,MAAMH,GAxBI,yDAAH,qDA2Bf,OACE,sBAAKI,UAAU,wBAAf,UACE,qBACEC,MAAO,CACLC,gBAAgB,OAAD,OAASxB,6BAAT,uBAEjBsB,UAAU,QAJZ,SAME,qBAAKA,UAAU,gBAAgBG,IAAK7B,EAApC,kCAIF,wBAAQ8B,QAASzB,EAAWwB,IAAK/B,EAAjC","file":"static/js/9.327e5708.chunk.js","sourcesContent":["import axios from 'axios';\nimport { useEffect, useRef } from 'react';\nimport './JokeTellerStyles.scss';\n\nconst TITLE = process.env.REACT_APP_APP_NAME + ' - Joke Teller';\nconst jokeAPIUrl = 'https://icanhazdadjoke.com/';\n\nconst JokeTeller: React.FC = () => {\n  const btnRef = useRef<HTMLButtonElement>(null);\n  const jokeRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    document.title = TITLE;\n  });\n\n  const tellAJoke = async () => {\n    btnRef!.current!.disabled = true;\n\n    let jokeString = 'No joke';\n\n    try {\n      const jokeRes = await axios.get<string>(jokeAPIUrl, {\n        headers: {\n          Accept: 'text/plain',\n        },\n      });\n\n      jokeString = jokeRes.data;\n    } catch (err) {\n      console.log(err);\n      jokeString = 'Sorry, fail to get you a joke, please try again later';\n    }\n\n    jokeRef!.current!.innerText = jokeString;\n    let synth = window.speechSynthesis;\n    let uterThis = new SpeechSynthesisUtterance(jokeString);\n    uterThis.addEventListener('end', () => {\n      btnRef!.current!.disabled = false;\n    });\n    synth.speak(uterThis);\n  };\n\n  return (\n    <div className=\"joke-teller-container\">\n      <div\n        style={{\n          backgroundImage: `url(${process.env.REACT_APP_BASE_URL}/images/robot.gif)`,\n        }}\n        className=\"robot\"\n      >\n        <div className=\"speech-bubble\" ref={jokeRef}>\n          Wanna hear a joke?\n        </div>\n      </div>\n      <button onClick={tellAJoke} ref={btnRef}>\n        Tell Me A Joke!\n      </button>\n    </div>\n  );\n};\n\nexport default JokeTeller;\n"],"sourceRoot":""}
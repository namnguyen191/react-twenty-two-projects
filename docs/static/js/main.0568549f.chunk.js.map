{"version":3,"sources":["shared/components/AppleNavbar/AppleNavbar.tsx","shared/components/ParallaxCard/ParallaxCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppleNavbar","props","children","className","role","ParallaxCard","cardContainerRef","useRef","cardRef","cardBgRef","title","text","width","height","imageUrl","onMouseMove","event","current","Error","mouseX","pageX","offsetLeft","rX","mouseY","pageY","offsetTop","rY","style","transform","tX","tY","onMouseLeave","ref","backgroundImage","InfinityScroll","React","lazy","Home","JokeTeller","QuoteGenerator","PictureInPicture","LightAndDarkMode","App","basename","process","to","fontSize","Suspense","fallback","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0568549f.chunk.js","sourcesContent":["import { PropsWithChildren } from 'react';\nimport './AppleNavbarStyles.scss';\n\nexport type AppleNavbarProps = {};\n\nconst AppleNavbar: React.FC<PropsWithChildren<AppleNavbarProps>> = (props) => {\n  const { children } = props;\n\n  return (\n    <nav className=\"apple-nav\" role=\"navigation\">\n      <ul className=\"nav-items\">{children}</ul>\n    </nav>\n  );\n};\n\nexport default AppleNavbar;\n","import { useRef } from 'react';\nimport './ParallaxCardStyles.scss';\n\nexport type ParallaxCardProps = {\n  /**\n   * The title of the card, keep it short which will be an <h1> element\n   */\n  title: string;\n  /**\n   * The text paragraph, which will be a <p> element. Keep this short for best visual\n   */\n  text: string;\n  /**\n   * The url of the background image\n   */\n  imageUrl: string;\n  /**\n   * The width of the card in pixel. Default is 240\n   */\n  width?: number;\n  /**\n   * The height of the card in pixel. Default is 320\n   */\n  height?: number;\n};\n\nconst ParallaxCard: React.FC<ParallaxCardProps> = (props) => {\n  const cardContainerRef = useRef<HTMLDivElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n  const cardBgRef = useRef<HTMLDivElement>(null);\n\n  const { title, text, width = 240, height = 320, imageUrl } = props;\n\n  const handleMouseMove = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    if (\n      cardRef &&\n      cardRef.current &&\n      cardContainerRef &&\n      cardContainerRef.current &&\n      cardBgRef &&\n      cardBgRef.current\n    ) {\n      const mouseX =\n        (event.pageX - cardContainerRef.current.offsetLeft - width / 2) / width;\n      const rX = mouseX * 30;\n      const mouseY =\n        (event.pageY - cardContainerRef.current.offsetTop - height / 2) /\n        height;\n      const rY = mouseY * -30;\n      cardRef.current.style.transform = `rotateY(${rX}deg) rotateX(${rY}deg)`;\n\n      const tX = mouseX * -40;\n      const tY = mouseY * -40;\n      cardBgRef.current.style.transform = `translateX(${tX}px) translateY(${tY}px)`;\n    } else {\n      return new Error('Element ref is not setting up correctly');\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (\n      cardRef &&\n      cardRef.current &&\n      cardContainerRef &&\n      cardContainerRef.current &&\n      cardBgRef &&\n      cardBgRef.current\n    ) {\n      cardRef.current.style.transform = `rotateY(0deg) rotateX(0deg)`;\n      cardBgRef.current.style.transform = `translateX(0px) translateY(0px)`;\n    }\n  };\n\n  return (\n    <div\n      className=\"parallax-card-container\"\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n      ref={cardContainerRef}\n    >\n      <div\n        className=\"card\"\n        ref={cardRef}\n        style={{\n          width: width + 'px',\n          height: height + 'px',\n        }}\n      >\n        <div\n          className=\"card-bg\"\n          ref={cardBgRef}\n          style={{\n            backgroundImage: `url(${imageUrl})`,\n          }}\n        ></div>\n        <div className=\"card-info\">\n          <h1 className=\"title\">{title}</h1>\n          <p className=\"text\">{text}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ParallaxCard;\n","import React from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport './AppStyles.scss';\nimport { AppleNavbar } from './shared/components';\n\nconst InfinityScroll = React.lazy(\n  () => import('./pages/Projects/InfinityScroll/InfinityScroll')\n);\nconst Home = React.lazy(() => import('./pages/Home/Home'));\nconst JokeTeller = React.lazy(\n  () => import('./pages/Projects/JokeTeller/JokeTeller')\n);\nconst QuoteGenerator = React.lazy(\n  () => import('./pages/Projects/QuoteGenerator/QuoteGenerator')\n);\nconst PictureInPicture = React.lazy(\n  () => import('./pages/Projects/PictureInPicture/PictureInPicture')\n);\nconst LightAndDarkMode = React.lazy(\n  () => import('./pages/Projects/LightAndDarkMode/LightAndDarkMode')\n);\n\nconst App: React.FC = () => {\n  return (\n    <Router basename={process.env.REACT_APP_BASE_URL}>\n      <AppleNavbar>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/\">\n          <i style={{ fontSize: '2.7rem' }} className=\"fab fa-github\"></i>\n        </Link>\n      </AppleNavbar>\n      <React.Suspense fallback={<p>Loading</p>}>\n        <Route exact path=\"/project/quote-generator\">\n          <QuoteGenerator />\n        </Route>\n        <Route exact path=\"/project/infinity-scroll\">\n          <InfinityScroll />\n        </Route>\n        <Route exact path=\"/project/picture-in-picture\">\n          <PictureInPicture />\n        </Route>\n        <Route exact path=\"/project/joke-teller\">\n          <JokeTeller />\n        </Route>\n        <Route exact path=\"/project/light-and-dark\">\n          <LightAndDarkMode />\n        </Route>\n        <Route exact path={'/'}>\n          <Home />\n        </Route>\n      </React.Suspense>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './globalStyles.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}